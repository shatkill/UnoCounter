{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/main/game-page/game-page.component.ts","./src/app/main/game-page/game-page.component.html","./src/app/main/game-page/statistics-dialog/statistics-dialog.component.ts","./src/app/main/game-page/statistics-dialog/statistics-dialog.component.html","./src/app/main/main-frame/main-frame.component.ts","./src/app/main/main-frame/main-frame.component.html","./src/app/main/main-header/main-header.component.ts","./src/app/main/main-header/main-header.component.html","./src/app/main/main-landing/main-landing.component.ts","./src/app/main/main-landing/main-landing.component.html","./src/app/main/main.module.ts","./src/app/main/player-score-item/player-score-item.component.ts","./src/app/main/player-score-item/player-score-item.component.html","./src/app/shared/data-save.service.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { MainFrameComponent } from './main/main-frame/main-frame.component';\r\nimport { MainLandingComponent } from './main/main-landing/main-landing.component';\r\nimport { GamePageComponent } from './main/game-page/game-page.component';\r\n\r\nconst routes: Routes = [\r\n  {path: \"\", component: MainFrameComponent, children: [{\r\n    path: \"\",  component: MainLandingComponent\r\n  }, {\r\n    path: \"game\",  component: GamePageComponent\r\n  },]}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'uc-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'UnoCounter';\r\n}\r\n","<uc-main-header></uc-main-header>\r\n<uc-main-frame></uc-main-frame>\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { MainModule } from './main/main.module';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\n\r\n@NgModule({\r\n  declarations: [AppComponent],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    MainModule,\r\n    BrowserAnimationsModule,\r\n    MatDialogModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DataSaveService } from 'src/app/shared/data-save.service';\nimport { StatisticsDialogComponent } from './statistics-dialog/statistics-dialog.component';\n\nexport interface Score {\n  scoreCurrentRound: number;\n  sumScore: number;\n  won: boolean;\n}\n\n@Component({\n  selector: 'uc-game-page',\n  templateUrl: './game-page.component.html',\n  styleUrls: ['./game-page.component.scss'],\n})\nexport class GamePageComponent {\n  public players!: string[] | null;\n\n  public shufflePlayer: string | undefined;\n  public maxScore: number;\n  public isFinished = false;\n  public halvePointsActivated = false;\n\n  public scores: { [player: string]: Score[] } = {};\n\n  public formGroup!: ReturnType<typeof this.createFormGroup>;\n\n  constructor(\n    private dataSaveService: DataSaveService,\n    private dialog: MatDialog\n  ) {\n    this.players = this.dataSaveService.players;\n    this.maxScore = this.dataSaveService.maxScore;\n    this.halvePointsActivated = this.dataSaveService.halvePointsActivated;\n    this.scores = this.dataSaveService.scores;\n\n    this.formGroup = this.createFormGroup();\n\n    this.changeShufflePlayerTurn();\n  }\n\n  public addScores() {\n    if (!this.thereIsOneWinner()) {\n      return;\n    }\n\n    this.players?.forEach((player) => {\n      this.scores[player].push({\n        scoreCurrentRound: this.getPlayerControl(player).value,\n        sumScore:\n          this.getPlayerControl(player).value +\n          this.getCurrentScoreOfPlayer(player),\n        won: this.getPlayerControl(player).value === null,\n      });\n\n      if (\n        this.halvePointsActivated &&\n        this.getCurrentScoreOfPlayer(player) % 100 === 0\n      ) {\n        this.scores[player][this.scores[player].length - 1].sumScore /= 2;\n      }\n\n      this.getPlayerControl(player).setValue(null);\n    });\n\n    this.dataSaveService.scores = this.scores;\n    this.determineLoser();\n    this.changeShufflePlayerTurn();\n  }\n\n  public determineLoser() {\n    this.players?.forEach((player) => {\n      if (this.getCurrentScoreOfPlayer(player) >= this.maxScore) {\n        this.isFinished = true;\n      }\n    });\n  }\n\n  public getCurrentScoreOfPlayer(player: string) {\n    return this.scores[player][this.scores[player].length - 1].sumScore;\n  }\n\n  public getPlayerControl(player: string) {\n    return this.formGroup.controls[player];\n  }\n\n  public changeShufflePlayerTurn() {\n    this.shufflePlayer = this.players\n      ? this.players[(this.currentRound - 1) % this.players.length]\n      : '';\n  }\n\n  public createFormGroup() {\n    const group: any = {};\n\n    this.players?.forEach((player) => {\n      group[player] = new FormControl<number | null>(null);\n    });\n    return new FormGroup(group);\n  }\n\n  public thereIsOneWinner() {\n    let winners = 0;\n    this.players?.forEach((player) => {\n      if (this.getPlayerControl(player).value === null) winners++;\n    });\n\n    return winners === 1;\n  }\n\n  public editMaxScore() {}\n\n  public openStatistics(): void {\n    const dialogRef = this.dialog.open(StatisticsDialogComponent, {\n      data: {\n        players: this.players,\n        scores: this.scores,\n        rounds: this.currentRound,\n      },\n      maxWidth: '500px',\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log('The dialog was closed');\n    });\n  }\n\n  public get currentRound() {\n    if (this.scores === null || this.players === null) return 0;\n    return this.scores[this.players[0]].length;\n  }\n\n  public undoLastScores() {\n    if (this.currentRound < 2) return;\n\n    this.players?.forEach((player) => {\n      this.getPlayerControl(player).setValue(this.scores[player].pop()?.scoreCurrentRound);\n    });\n  }\n}\n","<div class=\"uc-info-container\">\n  <div class=\"uc-score-info\">\n    <div class=\"uc-score\">Max Score: {{ maxScore }}</div>\n    <div class=\"uc-edit-button\" (click)=\"editMaxScore()\">\n      <mat-icon>edit</mat-icon>\n    </div>\n  </div>\n  <div class=\"uc-edit-button\" (click)=\"undoLastScores()\">\n    <mat-icon>undo</mat-icon>\n  </div>\n  <div class=\"uc-info-button\" (click)=\"openStatistics()\">\n    <mat-icon>info</mat-icon>\n  </div>\n</div>\n\n<div class=\"uc-table uc-space-bottom\">\n  <div class=\"uc-table-row uc-table-row-players\">\n    <div\n      class=\"uc-table-cell uc-table-cell-player\"\n      *ngFor=\"let player of players\"\n      [ngClass]=\"{ 'uc-current-shuffler-cell': shufflePlayer === player }\"\n    >\n      {{ player.slice(0, 1) }}{{ player.slice(-1) }}\n    </div>\n  </div>\n  <div class=\"uc-seperator\"></div>\n  <div class=\"uc-scoreboard\">\n    <div\n      class=\"uc-table-row\"\n      *ngFor=\"let e of [].constructor(currentRound); let round = index\"\n    >\n      <div\n        class=\"uc-table-cell\"\n        *ngFor=\"let player of players\"\n        [ngClass]=\"{ 'uc-winner-cell': scores[player][round].won }\"\n      >\n        {{ scores[player][round].sumScore }}\n      </div>\n    </div>\n    <div class=\"uc-table-row\">\n      <div class=\"uc-table-cell\" *ngFor=\"let player of players\">\n        <input type=\"number\" [formControl]=\"$any(getPlayerControl(player))\" />\n      </div>\n    </div>\n  </div>\n</div>\n\n<div *ngIf=\"!this.isFinished\" class=\"uc-default-button\" (click)=\"addScores()\">\n  Save\n</div>\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Score } from '../game-page.component';\n\nexport interface DialogData {\n  players: string[];\n  scores: { [player: string]: Score[] };\n  rounds: number;\n}\n\nexport enum StatisticId {\n  AVG_SCORE,\n  WINS,\n  WORST_SCORE,\n  WINSTREAK,\n}\n\nexport interface StatisticType {\n  id: StatisticId;\n  name: string;\n}\n\nexport interface StatisticCalculator {\n  id: StatisticType;\n  calcFunction: Function;\n}\n\n@Component({\n  selector: 'uc-statistics-dialog',\n  templateUrl: './statistics-dialog.component.html',\n  styleUrls: ['./statistics-dialog.component.scss'],\n})\nexport class StatisticsDialogComponent {\n  constructor(\n    public dialogRef: MatDialogRef<StatisticsDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData\n  ) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  public get statisticTypes() {\n    return [\n      {\n        id: { id: StatisticId.WINS, name: 'Wins' },\n        calcFunction: (player: string) => {\n          let count = 0;\n          this.data.scores[player].forEach((score) => {\n            if (score.won) {\n              count++;\n            }\n          });\n\n          return count;\n        },\n      },\n      {\n        id: { id: StatisticId.AVG_SCORE, name: 'AVG. Score' },\n        calcFunction: (player: string) => {\n          return (\n            this.data.scores[player][this.data.rounds - 1].sumScore /\n            (this.data.rounds - 1)\n          ).toFixed(2);\n        },\n      },\n      {\n        id: { id: StatisticId.WORST_SCORE, name: 'Worst score' },\n        calcFunction: (player: string) => {\n          let worstScore = -Infinity;\n          this.data.scores[player].forEach((score) => {\n            if (score.scoreCurrentRound > worstScore) {\n              worstScore = score.scoreCurrentRound;\n            }\n          });\n          return worstScore;\n        },\n      },\n      {\n        id: { id: StatisticId.WINSTREAK, name: 'Win streak' },\n        calcFunction: (player: string) => {\n          let winStreak = 0;\n\n          let currentStreak = 0;\n\n          for (let i = 1; i < this.data.scores[player].length; i++) {\n            if (this.data.scores[player][i].won) {\n              currentStreak++;\n\n              if (currentStreak > winStreak) {\n                winStreak = currentStreak;\n              }\n            } else {\n              currentStreak = 0;\n            }\n          }\n          return winStreak;\n        },\n      },\n    ];\n  }\n}\n","<div class=\"uc-dialog-container\">\n  <h4>Statistics</h4>\n  <table>\n    <thead>\n      <tr class=\"uc-table-header-row\">\n        <th></th>\n        <th *ngFor=\"let player of data.players\">{{ player }}</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let statisticType of statisticTypes\">\n        <td>{{ statisticType.id.name }}</td>\n        <td *ngFor=\"let player of data.players\">\n          {{ statisticType.calcFunction(player) }}\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'uc-main-frame',\n  templateUrl: './main-frame.component.html',\n  styleUrls: ['./main-frame.component.scss']\n})\nexport class MainFrameComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"uc-main-frame\">\n  <router-outlet></router-outlet>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'uc-main-header',\n  templateUrl: './main-header.component.html',\n  styleUrls: ['./main-header.component.scss']\n})\nexport class MainHeaderComponent implements OnInit {\n\n  constructor(private appRouter: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  public goToHome() {\n    this.appRouter.navigate([\"\"]);\n  }\n\n}\n","<div class=\"uc-main-header\" (click)=\"goToHome()\">\n  <img src=\"https://upload.wikimedia.org/wikipedia/commons/f/f9/UNO_Logo.svg\" />\n  <div class=\"uc-title\">Score Counter</div>\n</div>\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { DataSaveService } from 'src/app/shared/data-save.service';\nimport { Score } from '../game-page/game-page.component';\n\n@Component({\n  selector: 'uc-main-landing',\n  templateUrl: './main-landing.component.html',\n  styleUrls: ['./main-landing.component.scss'],\n})\nexport class MainLandingComponent implements OnInit {\n  public selectedPlayers: string[] = [];\n\n  public addPlayerControl = new FormControl<string>('');\n  public scoreControl = new FormControl<number>(400);\n  public halveControl = new FormControl<boolean>(true);\n\n  @ViewChild('addPlayerInput') addPlayerInput: ElementRef | undefined;\n\n  constructor(\n    private dataSaveService: DataSaveService,\n    private appRouter: Router\n  ) {}\n\n  ngOnInit(): void {}\n\n  public addPlayer() {\n    if (\n      this.addPlayerControl.value === '' ||\n      this.addPlayerControl.value === null\n    ) {\n      return;\n    }\n\n    this.selectedPlayers.push(this.addPlayerControl.value);\n    this.addPlayerControl.reset();\n\n    this.addPlayerInput?.nativeElement.focus();\n  }\n\n  public startGame() {\n    if (this.selectedPlayers.length === 0) {\n      return;\n    }\n\n    this.dataSaveService.players = this.selectedPlayers;\n    this.dataSaveService.maxScore = this.scoreControl.value ?? 400;\n    this.dataSaveService.halvePointsActivated =\n      this.halveControl.value ?? false;\n\n    this.dataSaveService.scores = this.createScores();\n\n    this.appRouter.navigate(['/game']);\n  }\n\n  public createScores() {\n    let scores: { [player: string]: Score[] } = {};\n\n    this.selectedPlayers?.forEach((player) => {\n      if (!scores[player]) {\n        scores[player] = [{ scoreCurrentRound: 0, sumScore: 0, won: false }];\n      }\n    });\n\n    return scores;\n  }\n\n  public resumeGame() {\n    this.appRouter.navigate(['/game']);\n  }\n\n  public get recentGameExists() {\n    if (\n      this.dataSaveService.players &&\n      this.dataSaveService.players.length > 0\n    ) {\n      return true;\n    } else return false;\n  }\n}\n","<div class=\"uc-rules\">\n  <h4>Rules</h4>\n\n  <form class=\"uc-rules-form\">\n    <div>\n      <label>Halve points at full hundreds?</label>\n      <input type=\"checkbox\" [formControl]=\"halveControl\" />\n    </div>\n    <div>\n      <input\n        type=\"number\"\n        [formControl]=\"scoreControl\"\n        placeholder=\"Max. Score\"\n      />\n      <label>Max Score</label>\n    </div>\n  </form>\n</div>\n\n<div class=\"uc-players-table\">\n  <h4>Players: {{ selectedPlayers.length }}</h4>\n\n  <div class=\"uc-player\" *ngIf=\"selectedPlayers.length == 0\">\n    Add players below\n  </div>\n\n  <div class=\"uc-players\">\n    <div class=\"uc-player\" *ngFor=\"let player of selectedPlayers\">\n      {{ player }}\n    </div>\n  </div>\n</div>\n\n<form class=\"uc-add-player-form uc-space-bottom\">\n  <input\n    #addPlayerInput\n    type=\"text\"\n    placeholder=\"Name\"\n    [formControl]=\"addPlayerControl\"\n  />\n  <div class=\"uc-default-button\" (click)=\"addPlayer()\">Add player</div>\n</form>\n\n<div class=\"uc-accent-button uc-space-bottom\" (click)=\"startGame()\">\n  Start Game\n</div>\n<div\n  *ngIf=\"recentGameExists\"\n  class=\"uc-resume-game-form uc-accent-green-button uc-space-bottom\"\n  (click)=\"resumeGame()\"\n>\n  Resume Game\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MainFrameComponent } from './main-frame/main-frame.component';\nimport { MainLandingComponent } from './main-landing/main-landing.component';\nimport { AppRoutingModule } from '../app-routing.module';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { MainHeaderComponent } from './main-header/main-header.component';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { GamePageComponent } from './game-page/game-page.component';\nimport { PlayerScoreItemComponent } from './player-score-item/player-score-item.component';\nimport { StatisticsDialogComponent } from './game-page/statistics-dialog/statistics-dialog.component';\n\nimport { MatIconModule } from '@angular/material/icon';\n\n@NgModule({\n  declarations: [\n    MainFrameComponent,\n    MainLandingComponent,\n    MainHeaderComponent,\n    GamePageComponent,\n    PlayerScoreItemComponent,\n    StatisticsDialogComponent,\n  ],\n  imports: [\n    CommonModule,\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatIconModule,\n  ],\n  exports: [MainFrameComponent, MainLandingComponent, MainHeaderComponent],\n})\nexport class MainModule {}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormControl, UntypedFormControl } from '@angular/forms';\nimport { Player } from 'src/app/shared/models/Player';\n\n@Component({\n  selector: 'uc-player-score-item',\n  templateUrl: './player-score-item.component.html',\n  styleUrls: ['./player-score-item.component.scss'],\n})\nexport class PlayerScoreItemComponent implements OnInit {\n  @Input()\n  public player: Player | undefined;\n\n  @Input()\n  public scoreControl!: FormControl;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<div class=\"uc-table-row\">\n  <div class=\"uc-table-cell\">{{ player?.name }}</div>\n  <div class=\"uc-table-cell\">{{ player?.score }}</div>\n  <div class=\"uc-table-cell\">\n    <input\n      type=\"number\"\n      class=\"uc-score-counter\"\n      [formControl]=\"scoreControl\"\n    />\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Score } from '../main/game-page/game-page.component';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DataSaveService {\n  public set players(players: string[] | null) {\n    localStorage.setItem('players', JSON.stringify(players));\n  }\n\n  public get players(): string[] | null {\n    let localStoragePlayers = localStorage.getItem('players');\n\n    if (localStoragePlayers !== null) {\n      return JSON.parse(localStoragePlayers) as string[];\n    }\n    return [];\n  }\n\n  public set maxScore(maxScore: number) {\n    localStorage.setItem('maxScore', maxScore.toString());\n  }\n\n  public get maxScore() {\n    let localStorageMaxScore = localStorage.getItem('maxScore');\n\n    if (localStorageMaxScore !== null) {\n      return +localStorageMaxScore as number;\n    }\n    return 0;\n  }\n\n  public set halvePointsActivated(halvePointsActivated: boolean) {\n    localStorage.setItem(\n      'halvePointsActivated',\n      halvePointsActivated.toString()\n    );\n  }\n\n  public get halvePointsActivated() {\n    let halvePointsActivated = localStorage.getItem('halvePointsActivated');\n\n    if (halvePointsActivated !== null) {\n      return halvePointsActivated === 'true';\n    }\n    return false;\n  }\n\n  public set scores(scores: { [player: string]: Score[] }) {\n    if (scores == null) return;\n\n    localStorage.setItem('scores', JSON.stringify(scores));\n  }\n\n  public get scores(): { [player: string]: Score[] } {\n    let scores = localStorage.getItem('scores');\n\n    if (scores != null) {\n      return JSON.parse(scores) as { [player: string]: Score[] };\n    }\n    return {};\n  }\n\n  constructor() {}\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["RouterModule","MainFrameComponent","MainLandingComponent","GamePageComponent","routes","path","component","children","AppRoutingModule","_","_2","_3","forRoot","imports","i1","exports","AppComponent","constructor","title","selectors","decls","vars","template","AppComponent_Template","rf","ctx","i0","ɵɵelement","BrowserModule","MainModule","BrowserAnimationsModule","MatDialogModule","AppModule","bootstrap","declarations","FormControl","FormGroup","StatisticsDialogComponent","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","ɵɵpureFunction1","_c0","ctx_r0","shufflePlayer","player_r4","ɵɵadvance","ɵɵtextInterpolate2","slice","_c1","ctx_r7","scores","player_r8","round_r6","won","ɵɵtextInterpolate1","sumScore","ɵɵtemplate","GamePageComponent_div_18_div_1_Template","ctx_r1","players","ctx_r2","getPlayerControl","player_r10","ɵɵlistener","GamePageComponent_div_21_Template_div_click_0_listener","ɵɵrestoreView","_r12","ctx_r11","ɵɵnextContext","ɵɵresetView","addScores","dataSaveService","dialog","isFinished","halvePointsActivated","maxScore","formGroup","createFormGroup","changeShufflePlayerTurn","thereIsOneWinner","forEach","player","push","scoreCurrentRound","value","getCurrentScoreOfPlayer","length","setValue","determineLoser","controls","currentRound","group","winners","editMaxScore","openStatistics","dialogRef","open","data","rounds","maxWidth","afterClosed","subscribe","result","console","log","undoLastScores","pop","ɵɵdirectiveInject","DataSaveService","i2","MatDialog","consts","GamePageComponent_Template","GamePageComponent_Template_div_click_4_listener","GamePageComponent_Template_div_click_7_listener","GamePageComponent_Template_div_click_10_listener","GamePageComponent_div_15_Template","GamePageComponent_div_18_Template","GamePageComponent_div_20_Template","GamePageComponent_div_21_Template","ɵɵpureFunction0","_c2","MAT_DIALOG_DATA","ɵɵtextInterpolate","player_r2","statisticType_r3","calcFunction","player_r5","StatisticsDialogComponent_tr_9_td_3_Template","id","name","StatisticId","onNoClick","close","statisticTypes","WINS","count","score","AVG_SCORE","toFixed","WORST_SCORE","worstScore","Infinity","WINSTREAK","winStreak","currentStreak","i","MatDialogRef","StatisticsDialogComponent_Template","StatisticsDialogComponent_th_7_Template","StatisticsDialogComponent_tr_9_Template","ngOnInit","MainFrameComponent_Template","MainHeaderComponent","appRouter","goToHome","navigate","Router","MainHeaderComponent_Template","MainHeaderComponent_Template_div_click_0_listener","MainLandingComponent_div_25_Template_div_click_0_listener","_r6","ctx_r5","resumeGame","selectedPlayers","addPlayerControl","scoreControl","halveControl","addPlayer","reset","addPlayerInput","nativeElement","focus","startGame","createScores","recentGameExists","viewQuery","MainLandingComponent_Query","MainLandingComponent_div_15_Template","MainLandingComponent_div_17_Template","MainLandingComponent_Template_div_click_21_listener","MainLandingComponent_Template_div_click_23_listener","MainLandingComponent_div_25_Template","CommonModule","FormsModule","ReactiveFormsModule","PlayerScoreItemComponent","MatIconModule","inputs","PlayerScoreItemComponent_Template","localStorage","setItem","JSON","stringify","localStoragePlayers","getItem","parse","toString","localStorageMaxScore","factory","ɵfac","providedIn","environment","production","enableProdMode","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","catch","err","error"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}